?download.file
j = readJPEG(ff, native = T)
j
quantile(j[80,])
j[30]
quantile(j, 0.3)
quantile(j, 0.8)
p = tempfile()
edu=tempfile()
p.csv=download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', p, method='curl')
edu.csv=download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', edu, method='curl')
library(data.table)
p.data = fread(p.csv)
p.data = fread(p)
edu.data = fread(edu)
?merge
View(edu.data)
z= merge(p, edu, by='CountryCode')
z= merge(p, edu, by=c('CountryCode'))
View(p.data)
View(p.data)
z= merge(p, edu, by=c('CountryCode', 'V1'))
z= merge(p.data, edu.data, by=c('CountryCode', 'V1'))
View(p.data)
z= merge(p.data, edu.data, by=c( 'V1', 'CountryCode'))
View(p.data)
View(edu.data)
z= merge(p.data, edu.data, by='V1')
z= merge(p.data, edu.data, by=V1)
z= merge(p.data, edu.data, by=(V1, CountryCode))
z= merge(p.data, edu.data, by=c(V1, CountryCode))
z= merge(p.data, edu.data, by=c("V1", "CountryCode"))
list(p.data,edu.data)
list(p.data$V1)
list(p.data$V1, edu.data$CountryCode)
p[, list(p.data$V1, edu.data$CountryCode)]
merge(p.data, edu.data)
edu[,:V1=CountryCode]
edu[,V1:=CountryCode]
edu.data[,V1:=CountryCode]
View(edu.data)
merge(p.data, edu.data)
merge(p.data, edu.data, by='V1')
z = merge(p.data, edu.data, by='V1')
View(z)
View(edu.data)
View(p.data)
View(edu.data)
View(p.data)
?fread
p.data = fread(p, nrows=233)
View(p.data)
p.data = fread(p, nrows=231)
View(p.data)
?data.table
z = merge(p.data, edu.data, by='V1')
View(z)
z$GDP
View(p.data)
View(edu.data)
View(p.data)
View(p.data)
z[order[V2]]
z[order(V2)]
z[order(V2)][1,]
z[order(-V2)]
z = z[order(-V2)]
View(z)
z[13,]
names(edu.data)
z[,Income Group == "High income: OECD"]
z[,'Income Group' == "High income: OECD"]
z['Income Group']
z["Income Group"]
z["Income Group",]
z[,"Income Group"]
z[,z["Income Group"]
]
z[,c("Income Group")]
z[c("Income Group")]
z[c("Income Group"),]
z$"Income Group"
z[z$"Income Group"]
z[V1]
z[,V1]
z[,z$V1]
z[,V1]
z[,z$"Income Group"]
z[,z$"Income Group" == "High income: OECD"]
z[z$"Income Group" == "High income: OECD",]
z1 = z[z$"Income Group" == "High income: OECD",]
View(`z1`)
mean(z1$V2)
z2 = z[z$"Income Group" == "High income: nonOECD",]
mean(z2$V2)
View(`z2`)
?mean
mean(z2$V2, na.rm=T)
names(edu.data)
as.Factor(z$"Income Group")
as.factor(z$"Income Group")
as.factor(z$"Income Group").levels
as.factor(z$"Income Group").levels()
as.factor(z$"Income Group")['levels']
names(as.factor(z$"Income Group"))
?cut
?quantile
qunatile(z$V2)
quantile(z$V2)
quantile(z$V2, na.rm=T)
z[quantile(z$V2, na.rm=T) ~ as.factor(z$"Income Group")]
cut(z$"Income Group", breaks=quantile(z$V2, na.rm=T))
?cut
cut(quantile(z$V2, na.rm=T), breaks=z$"Income Group")
cut(quantile(z$V2, na.rm=T), breaks=as.factor(z$"Income Group"))
as.factor(z$"Income Group")
?uniq
~?uniq
??uniq
unique(as.factor(z$"Income Group"))
unique(z$"Income Group")
cut(quantile(z$V2, na.rm=T), breaks=unique(z$"Income Group"))
cut(z$V2, breaks=unique(z$"Income Group"))
cut(z, breaks=unique(z$"Income Group"))
z[!is.na(z$V2),]
z[!is.na(z$V2), V2]
cut(z[!is.na(z$V2), V2], breaks=unique(z$"Income Group"))
data(mtcars)
table(mtcars$gear, mtcars$am)
?table
cut(z$V2, breaks=unique(z$"Income Group"))
qunatile(z$V2)
quantile(z$V2)
quantile(z$V2, na.rm=T)
table(quantile(z$V2, na.rm=T), z$"Income Group")
table(quantile(z$V2, na.rm=T), unique(z$"Income Group")
)
unique(z$"Income Group")
unique(z$"Income Group")[:5]
unique(z$"Income Group")[1:5]
table(quantile(z$V2, na.rm=T), unique(z$"Income Group")[1:5])
quantile(z$V2, na.rm=T)
?quantile
str(z)
table(quantile(z$V2, na.rm=T), unique(z$"Income Group")[1:5])
?xtabs
xtabs(V1 ~ quntile(V1, na.rm=T), data=z )
xtabs(V1 ~ quantile(V1, na.rm=T), data=z )
xtabs(V1 ~ "Income Group", data=z )
z[V1]
z$V2
z$Income.Group
setnames(DT,"Income Group","IncomeGroup")
setnames(z,"Income Group","IncomeGroup")
xtabs(V1 ~ IncomeGroup, data=z )
z[IncomeGroup]
z[,IncomeGroup]
z[,IncomeGroup=as.factor(IncomeGroup)]
z[,IncomeGroup = as.factor(IncomeGroup)]
cut(z$V2, breaks=quantile(z$V2, na.rm=T))
library(Hmisc)
install.packages(Hmisc)
install.packages('Hmisc')
library(Hmisc)
cut2(z$V2, g=5)
?cut2
table(cut2(z$V2, g=5), unique(z$IncomeGroup[1:5]))
table(cut2(z$V2, g=5), z$IncomeGroup)
View(z)
cut(z$V2, breaks=quantile(z$V2, na.rm=T))
cut2(z$V2, g=5)
cut(z$V2, breaks=quantile(z$V2, na.rm=T, breaks =c(0,0.2,0.4,0.6,0.8,1)))
url ='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
ff = tempfile()
download.file(url, ff, method='curl')
data = read.csv(ff)
View(data)
names(data)
n = names(data)
?strsplit()
strsplit(n, 'wgtp')
ss = strsplit(n, 'wgtp')
ss[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", ff, method='curl')
dat = read.csv(ff)
View(dat)
?read.table
dat = read.csv(ff, skip=2, header=T)
View(dat)
dat = read.csv(ff, skip=3, header=T)
View(dat)
dat = read.csv(ff)
View(dat)
col.names= c('country_code', 'ranking', 'economy', 'dollars')
dat = read.csv(ff, skip=3, col.names=col.names, nrows =235)
dat = read.csv(ff, skip=3, nrows =235)
View(dat)
dat = read.csv(ff, skip=5, nrows =235)
View(dat)
dat = read.csv(ff, skip=5, nrows =235, header=F)
View(dat)
dat = read.csv(ff, skip=5, nrows =231, header=F)
View(dat)
?subset
df = subset(dat, select = c(1,2,4,5) )
View(df)
names(df) = col.names
View(df)
View(df)
?gsub()
gsub('.', '', '..')
gsub('.', '', '1..')
gsub('.', '', '1..2')
gsub('.', '*', '1..2')
gsub('.', '*', '..2')
gsub('.', '*',)
str = '..2'
gsub('.', '*', str)
str
str = gsub('.', '*', str)
str
str ="..2"
sub('.', '*', str)
sub('.', '*', '2.')
sub('\.', '*', '2.')
sub('/.', '*', '2.')
sub('/.', '/*', '2/.')
sub('/.', '*', '2/.')
lapply(df$dollars, gsub, '/.', '')
View(df)
df[,lapply(df$dollars, gsub, '/.', '')]
r =lapply(df$dollars, gsub, '/.', '')
myf = function(x){gsub(x, '/.', '')}
myf('123')
myf = function(x){gsub('/.', '', x)}
myf('123')
myf('..123')
myf('..123..')
gsub('/.','*', '..123..')
gsub('/.', '/*', '..123..')
sub('/.', '/*', '..123..')
sub('\.', '*', '..123..')
sub('//.', '*', '..123..')
sub('//.', '//*', '..123..')
sub('//.', '//*', "..123..")
sub('/.', '*', '2/.')
sub('//.', '//*', "/./.123/./.")
sub('/.', '*', "/./.123/./.")
gsub('/.', '*', "/./.123/./.")
myf = function(x){gsub('/.', '', x, fixed=T)}
myf('..123')
?escape
??escape
escapeRegex('..123')
myf = function(x){gsub('/.', '', escapeRegex(x))}
myf('..123')
myf = function(x){gsub('/.', '*', escapeRegex(x))}
escapeBS('.')
escapeBS('.123')
gsub('/.', '*',escapeBS('.123'))
gsub('/.', '*',escapeRegex('.123'))
gsub('\\.', '*',escapeRegex('.123'))
gsub('\\.', '*','.123')
myf = function(x){gsub('\\.', '*', x)}
ss = lapply(df$dollars, gsub, '\\.', '*')]
ss = lapply(df$dollars, gsub, '\\.', '*')
ss = lapply(df$dollars, mf)
ss = lapply(df$dollars, myf)
ss[190]
ss[191]
ss[192]
df$dollars = lapply(df$dollars, gsub, '\\.', '')
View(df)
df = subset(dat, select = c(1,2,4,5) )
names(df) = col.names
View(df)
?subset
df2 = subset(dat, country_code != '' )
df2 = subset(dat, dat$country_code != '' )
View(df2)
df2 = subset(dat, dat$country_code == '' )
df2 = subset(dat, dat$country_code == 'USA' )
View(df)
df2 = subset(dat, country_code == 'USA' )
names(df)
df2 = subset(dat, country_code == 'USA' )
df2 = subset(dat, 'country_code' == 'USA' )
View(df2)
df2 = subset(dat, df$country_code == 'USA' )
df2 = subset(df, country_code == 'USA' )
df2 = subset(df, country_code != '' )
View(df2)
myf
df$dollars = lapply(df$dollars, myf)
View(df)
myf= function(x){gsub('\\.', '', x)}
df$dollars = lapply(df2$dollars, myf)
df2$dollars = lapply(df2$dollars, myf)
df =df2
View(df)
mean(df$dollars)
mean(df$dollars, na.rm=T)
as.numeric(df$dollars =)
as.numeric(df$dollars)
myf= function(x){gsub('[\\.\\,]', '', x)}
ss = lapply(df2$dollars, myf)
df$dollars = lapply(df$dollars, myf)
mean(df$dollars )
mean(as.numeric(df$dollars)
)
as.numeric(df$dollars)
mean(as.numeric(df$dollars),na.rm=T)
??average
View(df)
dat = fread(ff)
View(dat)
myf
as.numeric(dat$V5)
dat[, V6:= myf(V5)]
View(dat)
myf
myf2=function(x){gsub('[\\,]', '', x)}
dat[, V7:= myf2(V5)]
View(dat)
dat[1:231,]
dat = dat[1:231,]
View(dat)
as.numeric(dat$V7)
mean(as.numeric(dat$V7))
mean(as.numeric(dat$V7), na.rm=T)
df
names(df)
df[!is.na(df$ranking),]
df2 = df[!is.na(df$ranking),]
mean(df2$dollars)
mean(df2$dollars, na.rm-T)
mean(df2$dollars, na.rm=T)
View(df)
View(df2)
mean(as.numeric(df2$dollars), na.rm=T)
grep("^United",country_names)
grep("^United",economy)
grep("^United",df2$economy)
myf3= function(x) grep("^United",x)
lapply(df2$economy, myf3)
grep("^United",df2$economy)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
sampleTimes[2012]
sampleTimes[1]
class(sampleTimes[1])
class(sampleTimes)
year(sampleTimes)
sampleTimes[year(sampleTimes) == 2012]
sampleTimes[year(sampleTimes) == '2012']
ncols(sampleTimes[year(sampleTimes) == 2012])
ncol(sampleTimes[year(sampleTimes) == 2012])
nrow(sampleTimes[year(sampleTimes) == 2012])
num(sampleTimes[year(sampleTimes) == 2012])
?vector
length(sampleTimes[year(sampleTimes) == 2012])
weekday(sampleTimes)
week.day(sampleTimes)
day(sampleTimes)
?date
?datetime
length(sampleTimes[wday(sampleTimes) == 1])
sampleTimes[wday(sampleTimes) == 1]
sampleTimes[wday(sampleTimes) == 0]
wday(sampleTimes)
wday(sampleTimes) == 1
wday(sampleTimes) == 3
wday(sampleTimes) == 1
sampleTimes(wday(sampleTimes) == 1)
sampleTimes[wday(sampleTimes) == 1]
wday(sampleTimes) == 1
summary(wday(sampleTimes) == 1)
summary(wday(sampleTimes) == 3)
summary(wday(sampleTimes) == 0)
summary(wday(sampleTimes) == 2)
summary(wday(sampleTimes) == 1)
summary(wday(sampleTimes) == 6)
summary(wday(sampleTimes) == 7)
summary(wday(sampleTimes) == 8)
summary(year(sampleTimes) == 2012 & wday(sampleTimes) == 8 )
summary(year(sampleTimes) == 2012 & wday(sampleTimes) == 1 )
summary(year(sampleTimes) == 2012 & wday(sampleTimes) == 2 )
summary(year(sampleTimes) == 2012 & weekdays(sampleTimes) == 2 )
summary(weekdays(sampleTimes) )
weekdays(sampleTimes[1])
summary(weekdays(sampleTimes) == "Понедельник")
summary(year(sampleTimes) == 2012 & weekdays(sampleTimes) == "Понедельник" )
f = tempfile()
ff= tempfile()
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', f, method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', ff, method='curl')
gpd = fread(f)
View(gpd)
gpd = subset(gpd, select = c(1,2,4,5), subset = c(1:190, 192:215, 217, 219:231) )
?ssubset
?subset
c(1:190, 192:215, 217, 219:231)
gpd = subset(gpd, V1 != '', select = c(1,2,4,5))
View(gpd)
edu = fread(ff)
View(edu)
View(gpd)
View(edu)
View(gpd)
View(edu)
View(gpd)
View(edu)
View(gpd)
names(gpd) = c("CountryCode", "Rank", "ShortName", "GPD")
?setnames
setnames(gpd, c("CountryCode", "Rank", "ShortName", "GPD"))
View(gpd)
myf= function(x){gsub('[\\.\\,]', '', x)}
gpd$GPD = lapply(gpd$GPD, myf)
setnames(edu, "Short Name", "ShortName")
merge(gpd, edu, by="CountryCode")
View(edu)
?merge
merge(gpd, edu, by=CountryCode)
View(gpd)
View(edu)
merge(gpd, edu, by='CountryCode')
View(gpd)
str(edu)
str(gpd)
merge(gpd, edu, by='CountryCode')
class(gpd)
class(edu)
gpd$CountryCode
class(gpd$CountryCode)
class(gpd$CountryCode)
class(gpd$GPD)
as.vector(gpd$GPD)
class(as.vector(gpd$GPD))
unlist(gpd$GPD)
gpd$GPD = unlist(gpd$GPD)
merge(gpd, edu, by='CountryCode')
z =merge(gpd, edu, by='CountryCode')
View(z)
names(z)
grepl('Fiscal year end: June',z['Special Note'])
z['Special Note']
class(z['Special Note'])
setnames(z, 'Special Note', 'special_note')
setnames(z, "Special Notes", "note")
grepl('Fiscal year end: June',z$note)
summary(z[grepl('Fiscal year end: June',z$note),])
nrow(z[grepl('Fiscal year end: June',z$note),])
library(latice)
library(lattice)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlime
??nlime
??trellis
??print.trellis()
??trellis.par.set()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot)
library(ggplot2)
??ggplot
install.packages('ggplot2')
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
?aes
g <- ggplot(movies, aes(color= rating))
print(q)
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
??BodyWeight
?splom()
?trellis.par.set()
?panel
??panel
install_packages(data.table)
packages_install(data.table)
install_package(data.table)
??install_package
??package
install.packages(data.table)
install.packages('data.table')
source('~/_projects/datascience/2_get_data/HW2/run_analysis.R')
setwd("~/_projects/datascience/2_get_data/HW2")
x.train = fread(file.path(dir.name, 'train', 'X_train.txt'), header=F)
packageVersion("data.table")
update.packages()
require(devtools)
remove.packages("data.table")
install_github("Rdatatable/data.table", build_vignettes=FALSE)
library(data.table)
x.train = fread(file.path(dir.name, 'train', 'X_train.txt'), header=F)
packageVersion("data.table")
library(data.table)
tmpfile <- tempfile()
write.csv(data.table(x=NA_character_, y=1:2), tmpfile, row.names=FALSE, na="")
fread(tmpfile)
